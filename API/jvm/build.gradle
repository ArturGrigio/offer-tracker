plugins {
    id 'scala'
    id 'com.github.johnrengelman.shadow' version '2.0.1'
    id 'jp.classmethod.aws.lambda' version '0.35'
    id 'maven-publish'
}

repositories {
    jcenter()
}

dependencies {
    compile group: 'com.amazonaws', name: 'aws-java-sdk-lambda', version: '1.11.141'
    compile group: 'com.amazonaws', name: 'aws-lambda-java-core', version: '1.1.0'
    compile group: 'com.typesafe', name: 'config', version: '1.3.1'
    compile group: 'org.json4s', name: 'json4s-jackson_2.12', version: '3.5.2'
    compile group: 'com.typesafe.slick', name: 'slick_2.12', version: '3.2.0'
    compile group: 'org.scala-lang', name: 'scala-library', version: '2.12.0'
    compile group: 'org.tinylog', name: 'tinylog', version: '1.2'

    runtime group: 'mysql', name: 'mysql-connector-java', version: '5.1.23'
    runtime group: 'com.typesafe.slick', name: 'slick-hikaricp_2.12', version: '3.2.0'

    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'org.scalatest', name: 'scalatest_2.12', version: '3.0.3'
}

// joint compilation
sourceSets.main.scala.srcDir "src/main/java"
sourceSets.main.java.srcDirs = []
sourceSets.test.scala.srcDir "src/test/java"
sourceSets.test.java.srcDirs = []


version = '1.0-SNAPSHOT'

// builds a jar with all transitive dependencies. this artifact should be suitable for uploading to lambda
shadowJar {
    destinationDir = project.buildDir
    classifier = ''
}

// forward our own gradle jvm properties on to the test jvm
tasks.withType(Test) {
    systemProperties System.properties
}

/**
 * Tasks for deploying and invoking our lambda functions.
 *
 * You'll need to make your aws credentials available to the toolchain.
 * http://docs.aws.amazon.com/sdk-for-java/v1/developer-guide/credentials.html
 *
 * One way is to populate your ~/.aws/credentials like this:
 *   [offer-tracker]
 *   aws_access_key_id=01234
 *   aws_secret_access_key=56789
 */
import com.amazonaws.services.lambda.model.InvocationType
import jp.classmethod.aws.gradle.lambda.AWSLambdaInvokeTask
import jp.classmethod.aws.gradle.lambda.AWSLambdaMigrateFunctionTask
import com.amazonaws.services.lambda.model.Runtime

aws {
    profileName = 'offer-tracker'
    region = 'us-west-1'
}


/**
 * Adds a new dynamic lambda deployment task with the specified parameters to our build.
 *
 * @param name name of the lambda function.
 * @param functionHandler fully qualified signature of the function handler.
 * @param memoryMB memory size of the function, in MB.
 */
void addDeploymentTask(String name, String functionHandler, int memoryMB = 512) {

    task "deploy${name.capitalize()}" (type: AWSLambdaMigrateFunctionTask, dependsOn: shadowJar) {
        functionName = name
        role = "arn:aws:iam::$AWS_ACCOUNT_ID:role/service-role/offers-search"
        runtime = Runtime.Java8
        timeout = 15 // seconds
        memorySize = memoryMB
        zipFile = shadowJar.archivePath
        handler = functionHandler
    }
}


addDeploymentTask("offersForAgent", "org.otracker.lambda.OffersForAgentHandler::handleRequest")
addDeploymentTask("offersForViewer", "org.otracker.lambda.OffersForViewerHandler::handleRequest")
